import tkinter as tk
from tkinter import messagebox
import googlemaps
import webbrowser

gmaps = googlemaps.Client(key='')

# Funkcija za dobijanje optimalne rute i vremena putovanja
def calculate_route():
    locations = location_entry.get("1.0", "end-1c").split("\n")
    locations = [loc for loc in locations if loc.strip()]  # Filtriramo prazne linije
    
    if len(locations) < 2:
        messagebox.showerror("Greška", "Unesite barem dve lokacije!")
        return
    
    mode = travel_mode.get()  # Uzimamo mod transporta (peške ili kolima)
    total_distance = 0  # Ukupna udaljenost
    total_duration = 0  # Ukupno vreme trajanja
    
    try:
        # Dobijamo matricu razdaljina izmedju lokacija
        matrix = gmaps.distance_matrix(locations, locations, mode=mode)
        distance_info = ""
        
        # Prikazujemo udaljenosti i vreme putovanja između svake tačke
        for i in range(len(locations) - 1):
            element = matrix['rows'][i]['elements'][i+1]
            distance = element['distance']['value']  # Udaljenost u metrima
            duration = element['duration']['value']  # Vreme u sekundama
            
            # Prikazivanje u ljudskom formatu (kilometri, minuti)
            distance_text = element['distance']['text']
            duration_text = element['duration']['text']
            
            distance_info += f"Od {locations[i]} do {locations[i+1]}: {distance_text}, trajanje: {duration_text}\n"
            
            total_distance += distance  # Sabiramo ukupnu udaljenost (u metrima)
            total_duration += duration  # Sabiramo ukupno trajanje (u sekundama)
        
        # Prikazujemo rezultate u poruci
        total_distance_km = total_distance / 1000  # Ukupna udaljenost u kilometrima
        total_duration_min = total_duration / 60  # Ukupno vreme u minutima
        
        messagebox.showinfo("Ruta i Vreme", 
                            f"{distance_info}\nUkupno trajanje: {total_duration_min:.2f} minuta\n"
                            f"Ukupno udaljenost: {total_distance_km:.2f} kilometara")
        
        # Generišemo URL za prikaz rute na Google Maps
        generate_google_maps_route(locations, mode)
    
    except Exception as e:
        messagebox.showerror("Greška", f"Nešto nije u redu: {e}")

# Funkcija za generisanje Google Maps rute i otvaranje u pretraživaču
def generate_google_maps_route(locations, mode):
    base_url = "https://www.google.com/maps/dir/?api=1&"
    origin = locations[0]
    destination = locations[-1]
    waypoints = '|'.join(locations[1:-1])
    
    # Kreiranje Google Maps URL-a sa parametrima za mod transporta
    if waypoints:
        maps_url = f"{base_url}origin={origin}&destination={destination}&waypoints={waypoints}&travelmode={mode}"
    else:
        maps_url = f"{base_url}origin={origin}&destination={destination}&travelmode={mode}"
    
    # Otvaranje rute u pretraživaču
    webbrowser.open(maps_url)

# Kreiramo GUI koristeći tkinter
root = tk.Tk()
root.title("Planer rute")

# Tekstualni okvir za unos lokacija
tk.Label(root, text="Unesite lokacije (jedna po liniji):").pack()
location_entry = tk.Text(root, height=10, width=50)
location_entry.pack()

# Izbor između peške i kolima
travel_mode = tk.StringVar(value="driving")  # Podrazumevano je vožnja
tk.Radiobutton(root, text="Kolima", variable=travel_mode, value="driving").pack()
tk.Radiobutton(root, text="Peške", variable=travel_mode, value="walking").pack()

# Dugme za izračunavanje rute
calculate_button = tk.Button(root, text="Izračunaj rutu", command=calculate_route)
calculate_button.pack()

# Pokrećemo glavni loop aplikacije
root.mainloop()
